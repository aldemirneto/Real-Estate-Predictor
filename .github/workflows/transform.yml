name: Transform data

on:
  schedule:
    - cron: "30 */6 * * *"
  workflow_dispatch:

jobs:
  wait_for_extract:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Extract Data workflow to finish
        uses: actions/github-script@v4
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
            const workflowRuns = await octokit.request(`GET /repos/${owner}/${repo}/actions/workflows/extract_data.yml/runs`);
            const lastWorkflowRun = workflowRuns.data.workflow_runs[0];
            console.log(`Last Extract Data workflow run: ${lastWorkflowRun.status}`);
            if (lastWorkflowRun.status === "completed" && lastWorkflowRun.conclusion === "success") {
              console.log("Extract Data workflow completed successfully");
              return true;
            } else {
              console.log("Extract Data workflow still running or failed");
              return false;
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run_orchestrator:
    needs: wait_for_extract
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Orchestrator Transform
        run: |
          python orchestrator_transform.py
      - name: Configure Git
        run: |
          git config --global user.email "humbertoaldemir@gmail.com"
          git config --global user.name "aldemirneto"
      - name: Commit and push changes to main branch
        run: |
          git add .
          git commit -m "Tratando dados"
          git push origin main
